- name: Ensure pipx is installed
  ansible.builtin.shell: |
    export PYENV_ROOT="{{ ansible_user_dir }}/.pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
    export PATH="$PYENV_ROOT/shims:$PATH"
    if ! command -v pipx >/dev/null 2>&1; then
      python3.13 -m pip install --user pipx
      python3.13 -m pipx ensurepath
      exit 0
    else
      exit 0
    fi
  args:
    executable: /bin/bash
  changed_when: false  # <-- suppresses "changed" unless you detect a real change

- name: Ensure ~/.local/bin is in PATH
  ansible.builtin.lineinfile:
    path: "{{ ansible_user_dir }}/.bashrc"
    line: 'export PATH="{{ ansible_user_dir }}/.local/bin:$PATH"'
    insertafter: EOF
    state: present

- name: Ensure poetry is installed via pipx
  become: false
  ansible.builtin.shell: |
    export PYENV_ROOT="{{ ansible_user_dir }}/.pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
    export PATH="$PYENV_ROOT/shims:$PATH"
    export PATH="$HOME/.local/bin:$PATH"
    if ! command -v poetry >/dev/null 2>&1; then
      pipx install poetry && echo "installed"
    fi
  args:
    executable: /bin/bash
  register: poetry_install
  changed_when: "'installed' in poetry_install.stdout"