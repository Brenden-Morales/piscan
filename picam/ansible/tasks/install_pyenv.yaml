- name: Check if pyenv is already installed
  ansible.builtin.stat:
    path: "{{ ansible_user_dir }}/.pyenv/bin/pyenv"
  register: pyenv_installed

- name: Install pyenv if not already installed
  ansible.builtin.shell: |
    curl -fsSL https://pyenv.run | bash
  args:
    executable: /bin/bash
  when: not pyenv_installed.stat.exists

- name: Ensure PYENV_ROOT is set in .bashrc
  ansible.builtin.lineinfile:
    path: "{{ ansible_user_dir }}/.bashrc"
    line: 'export PYENV_ROOT="$HOME/.pyenv"'
    insertafter: EOF
    state: present

- name: Ensure pyenv bin is in PATH
  ansible.builtin.lineinfile:
    path: "{{ ansible_user_dir }}/.bashrc"
    line: '[[ -d "$PYENV_ROOT/bin" ]] && export PATH="$PYENV_ROOT/bin:$PATH"'
    insertafter: EOF
    state: present

- name: Ensure pyenv is initialized
  ansible.builtin.lineinfile:
    path: "{{ ansible_user_dir }}/.bashrc"
    line: 'eval "$(pyenv init - bash)"'
    insertafter: EOF
    state: present

# Important: reload .bashrc to make pyenv command available immediately
- name: Source bashrc immediately
  ansible.builtin.shell: |
    source "{{ ansible_user_dir }}/.bashrc"
  args:
    executable: /bin/bash
  changed_when: false

- name: Check if Python 3.13 is already installed by pyenv
  ansible.builtin.shell: |
    {{ ansible_user_dir }}/.pyenv/bin/pyenv versions --bare
  args:
    executable: /bin/bash
  register: pyenv_versions
  changed_when: false
  failed_when: pyenv_versions.rc != 0 and 'No such file' not in pyenv_versions.stderr

- name: Install Python 3.13 using pyenv if not present
  ansible.builtin.shell: |
    {{ ansible_user_dir }}/.pyenv/bin/pyenv install 3.13
  args:
    executable: /bin/bash
  when: "'3.13' not in pyenv_versions.stdout"

- name: Get current global Python version
  ansible.builtin.shell: |
    {{ ansible_user_dir }}/.pyenv/bin/pyenv global
  args:
    executable: /bin/bash
  register: pyenv_global_version
  changed_when: false
  failed_when: false

- name: Set global Python version to 3.13
  ansible.builtin.shell: |
    {{ ansible_user_dir }}/.pyenv/bin/pyenv global 3.13
  args:
    executable: /bin/bash
  when: "'3.13' not in pyenv_global_version.stdout"